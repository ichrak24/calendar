{# templates/reservation/agenda.html.twig #}

{% extends 'base.html.twig' %}

{% block title %}Reservation Calendar{% endblock %}

{% block body %}
<h1>Reservation Calendar</h1>

<div class="calendar-navigation">
    {% set prevMonth = currentMonth - 1 %}
    {% set nextMonth = currentMonth + 1 %}
    {% set prevYear = currentYear %}
    {% set nextYear = currentYear %}

    {% if prevMonth == 0 %}
        {% set prevMonth = 12 %}
        {% set prevYear = currentYear - 1 %}
    {% endif %}

    {% if nextMonth == 13 %}
        {% set nextMonth = 1 %}
        {% set nextYear = currentYear + 1 %}
    {% endif %}

    <a href="{{ path('reservation_agenda', {'month': prevMonth, 'year': prevYear}) }}">Previous</a>
    <span>{{ currentMonthName }} {{ currentYear }}</span>
    <a href="{{ path('reservation_agenda', {'month': nextMonth, 'year': nextYear}) }}">Next</a>
</div>

<div id="calendar">
    <div class="month-year">{{ "now"|date("F Y") }}</div>
    <div class="calendar-grid">
        {% set daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'] %}
        {% for day in daysOfWeek %}
            <div class="day-of-week">{{ day }}</div>
        {% endfor %}

        {% for i in 0..(firstDayOfMonth - 1) %}
            <div class="day empty"></div>
        {% endfor %}

        {% for day in 1..daysInMonth %}
            {% set currentDate = currentYear ~ '-' ~ currentMonth ~ '-' ~ '%02d'|format(day) %}
            {% set reserved = false %}
            {% set reservationTimes = [] %}
            {% for reservation in reservations %}
                {% if currentDate >= reservation.startDate|date('Y-m-d') and currentDate <= reservation.endDate|date('Y-m-d') %}
                    {% set reserved = true %}
                    {% set title = reservation.title %}
                    {% set reservationTimes = reservationTimes|merge([reservation.startDate|date('H:i') ~ ' - ' ~ reservation.endDate|date('H:i')]) %}
                {% endif %}
            {% endfor %}
            <div class="day {% if reserved %}reserved{% endif %}" data-date="{{ currentDate }}">
                <div>{{ day }}</div>
                {% if reservationTimes is not empty %}
                    <div class="reservation-times">
                        {% for time in reservationTimes %}
                            <div>{{ time }}</div>
                        {% endfor %}
                    </div>
                {% endif %}
            </div>
        {% endfor %}
    </div>
</div>

<div id="reservation-info" class="hidden">
    <p>Selected Dates: <span id="selected-dates"></span></p>
    <button id="save-reservation">Save Reservation</button>
</div>

<!-- Hidden div for reservation details -->
<div id="reservationDetails" style="display: none;">
    <label for="reservationTitle">Title:</label>
    <input type="text" id="reservationTitle" name="reservationTitle">
    <label for="reservationStartTime">Start Time:</label>
    <input type="time" id="reservationStartTime" name="reservationStartTime">
    <label for="reservationEndTime">End Time:</label>
    <input type="time" id="reservationEndTime" name="reservationEndTime">
</div>

{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            let startDate = null;
            let endDate = null;

            document.querySelectorAll('.calendar-grid .day').forEach(day => {
                day.addEventListener('click', function () {
                    const date = this.dataset.date;
                    if (!startDate) {
                        startDate = date;
                        this.classList.add('selected-start');
                    } else if (!endDate) {
                        endDate = date;
                        this.classList.add('selected-end');
                        // Display reservation details input
                        document.getElementById('reservationDetails').style.display = 'block';
                    } else {
                        document.querySelectorAll('.selected-start, .selected-end').forEach(el => el.classList.remove('selected-start', 'selected-end'));
                        startDate = date;
                        endDate = null;
                        this.classList.add('selected-start');
                        // Hide reservation details input
                        document.getElementById('reservationDetails').style.display = 'none';
                    }

                    document.getElementById('selected-dates').textContent = `${startDate || ''} - ${endDate || ''}`;
                    document.getElementById('reservation-info').classList.remove('hidden');
                });
            });

            document.getElementById('save-reservation').addEventListener('click', function () {
                const title = document.getElementById('reservationTitle').value;
                const startTime = document.getElementById('reservationStartTime').value;
                const endTime = document.getElementById('reservationEndTime').value;

                if (!startDate || !endDate || !title || !startTime || !endTime) {
                    alert('Please fill all the fields.');
                    return;
                }

                fetch('{{ path('save_reservation') }}', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-CSRF-TOKEN': '{{ csrf_token('save_reservation') }}'
                    },
                    body: JSON.stringify({ title: title, startDate: `${startDate}T${startTime}`, endDate: `${endDate}T${endTime}` })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert('Reservation saved successfully.');
                        location.reload();
                    } else {
                        alert('Failed to save reservation.');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred. Please try again.');
                });
            });
        });
    </script>
{% endblock %}
