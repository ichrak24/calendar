{% extends 'base.html.twig' %}

{% block title %}Reservation Calendar{% endblock %}

{% block body %}
<h1>Reservation Calendar</h1>

<div class="calendar-navigation">
    <div class="nav-links">
        <i class="far fa-calendar-alt"></i> <!-- Icône de calendrier -->
        <select id="view-select">
            <option value="day">Day</option>
            <option value="week" selected>Week</option>
            <option value="month">Month</option>
        </select>
        <a href="{{ prevWeekUrl }}">Previous Week</a>
        <span>{{ currentWeekStart|date('F j, Y') }} - {{ currentWeekEnd|date('F j, Y') }}</span>
        <a href="{{ nextWeekUrl }}">Next Week</a>
    </div>
</div>

<div id="calendar">
    <div class="calendar-grid">
        <!-- Afficher les heures horizontalement -->
        <div class="hour-row">
            <div class="empty"></div> <!-- Espacement pour les jours -->
            {% for hour in range(0, 23) %}
                <span class="hour">{{ hour }}:00</span>
            {% endfor %}
        </div>

        <!-- Afficher les jours de la semaine avec les réservations -->
        {% for day in range(0, 6) %}
            {% set currentDate = currentWeekStart|date_modify('+' ~ day ~ ' days') %}
            <div class="day">
                <div class="day-name">{{ currentDate|date('D') }}</div>
                <div class="day-number">{{ currentDate|date('j') }}</div>
               {% for hour in range(0, 23) %}
                    <div class="reservation-slot" data-date="{{ currentDate|date('Y-m-d') }}" data-hour="{{ hour }}">
                        {% for reservation in reservations %}
                            {% if reservation.startDate|date('Y-m-d') == currentDate|date('Y-m-d') and reservation.startDate|date('H') == hour %}
                                <div class="reservation">
                                    {{ reservation.title }} ({{ reservation.startDate|date('H:i') }} - {{ reservation.endDate|date('H:i') }})
                                </div>
                            {% endif %}
                        {% endfor %}
                    </div>
                {% endfor %}
            </div>
        {% endfor %}
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="reservationModal" tabindex="-1" role="dialog" aria-labelledby="reservationModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="reservationModalLabel">Reservation Details</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <!-- Form for reservation details -->
        <form id="reservationForm">
          <div class="form-group">
            <label for="reservationTitle">Title:</label>
            <input type="text" class="form-control" id="reservationTitle" name="reservationTitle">
          </div>
          <div class="form-group">
            <label for="reservationStartTime">Start Time:</label>
            <input type="time" class="form-control" id="reservationStartTime" name="reservationStartTime">
          </div>
          <div class="form-group">
            <label for="reservationEndTime">End Time:</label>
            <input type="time" class="form-control" id="reservationEndTime" name="reservationEndTime">
          </div>
          <!-- Hidden input fields for date and hour -->
          <input type="hidden" id="reservationDate" name="reservationDate">
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" id="saveReservationBtn">Save Reservation</button>
      </div>
    </div>
  </div>
</div>

{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            document.querySelectorAll('.calendar-grid .reservation-slot').forEach(slot => {
                slot.addEventListener('click', function () {
                    const date = this.dataset.date;
                    const hour = this.dataset.hour;
                    const formattedHour = hour.toString().padStart(2, '0');

                    // Vérifier si la case est déjà réservée
                    const isReserved = this.querySelector('.reservation') !== null;

                    if (!isReserved) {
                        document.getElementById('reservationStartTime').value = formattedHour + ':00';
                        const nextHour = (parseInt(hour) + 1).toString().padStart(2, '0');
                        document.getElementById('reservationEndTime').value = nextHour + ':00';
                        document.getElementById('reservationDate').value = date;
                        document.getElementById('reservationTitle').value = '';
                        $('#reservationModal').modal('show');
                    } else {
                        // Si la case est déjà réservée, afficher un message ou effectuer une autre action
                        alert('Cette heure est déjà réservée.');
                    }
                });
            });

            document.getElementById('saveReservationBtn').addEventListener('click', function () {
                const title = document.getElementById('reservationTitle').value;
                const startTime = document.getElementById('reservationStartTime').value;
                const endTime = document.getElementById('reservationEndTime').value;
                const date = document.getElementById('reservationDate').value;

                const reservationDetails = {
                    reservationTitle: title,
                    reservationStartTime: startTime,
                    reservationEndTime: endTime,
                    reservationDate: date,
                };

                fetch('{{ path('save_reservation') }}', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(reservationDetails),
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            location.reload(); // Reload the page to show the new reservation
                        } else {
                            alert('Error saving reservation');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });

                $('#reservationModal').modal('hide');
            });
        });
    </script>
{% endblock %}
